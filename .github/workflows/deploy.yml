name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allow manual trigger
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-24.04
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch full history for better build caching

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: |
            .cache
            node_modules/.cache
          key: ${{ runner.os }}-build-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-cache-

      - name: Lint code
        run: npm run lint

      - name: Type check
        run: npm run type-check

      - name: Run tests
        run: npm run test

      - name: Validate content
        run: npm run validate

      - name: Build site
        run: npm run build:cli
        env:
          NODE_ENV: production

      - name: Setup Pages
        if: github.ref == 'refs/heads/main'
        id: pages
        uses: actions/configure-pages@v5

      - name: Upload artifact to Pages
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-24.04
    needs: build
    outputs:
      page_url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  lighthouse:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-24.04
    needs: deploy
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Wait for deployment
        run: sleep 30

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v11
        with:
          urls: |
            ${{ needs.deploy.outputs.page_url }}
            ${{ needs.deploy.outputs.page_url }}/posts/
          configPath: './lighthouse.json'
          uploadArtifacts: true
          temporaryPublicStorage: true

  notify:
    if: always() && github.ref == 'refs/heads/main'
    runs-on: ubuntu-24.04
    needs: [build, deploy, lighthouse]
    
    steps:
      - name: Deployment Status
        run: |
          if [ "${{ needs.build.result }}" == "success" ] && [ "${{ needs.deploy.result }}" == "success" ]; then
            echo "‚úÖ Deployment successful!"
            echo "üöÄ Site URL: ${{ needs.deploy.outputs.page_url }}"
          else
            echo "‚ùå Deployment failed!"
            exit 1
          fi